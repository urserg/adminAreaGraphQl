type Query {
  currentUser: User!
  user(id: String!): User
  tweets: [Post!]
  trends: [Trend!]
  suggestions: [Suggestion!]
}
type DeletionResult {
  deleted: [String!]
}
type Mutation {
  createTweet(userId: String!, body: String!): Post!
  createFavorite(tweetId: String!, userId: String!): Favorite!
  deleteFavorite(tweetId: String!, userId: String!): Favorite!
}

type Post {
  id: String!
  title: String!
  body: String!
  createdAt: String!
  updatedAt: String!
  author: User
  favorites: [Favorite!]
  stats: TweetStats
}
type TweetStats {
  favoriteCount: Int!
  retweetCount: Int!
  commentCount: Int!
}

type User {
    id: String!
    name: String!
    posts: [Post!]
    avatarUrl: String!
    createdAt: String!
    updatedAt: String!
    stats: UserStats
}

type UserStats {
  user: User!
  tweetCount: Int!
  followingCount: Int!
  followerCount: Int!
}

type Favorite {
  id: String!
  tweet: Post
  user: User
  createdAt: String!
  updatedAt: String!
}

type Retweet {
  id: String!
  tweet: Post
  user: User
  createdAt: String!
  updatedAt: String!
}

type HashtagTrend {
  hashtag: String!
  tweetCount: Int!
}
type TopicTrendQuote {
  title: String!
  description: String!
  imageUrl: String!
}
type TopicTrend {
  topic: String!
  tweetCount: Int!
  quote: TopicTrendQuote
}
union Trend = TopicTrend | HashtagTrend

type Suggestion {
  name: String!
  handle: String!
  avatarUrl: String!
  reason: String!
}
